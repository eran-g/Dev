package com.test.util;

import java.io.IOException;
import java.util.Properties;

import org.apache.log4j.PropertyConfigurator;

import com.test.util.AppLogger;


public class AppLog {
	
	private static final AppLogger theLogger = new AppLogger();
	
	
	public static final String USER_GOTO_REQUEST = "Goto Request";
	public static final String USER_LOGIN_REQUEST = "Login Request";
	public static final String USER_LOGIN_DENIED = "Login Request Denied";
	public static final String USER_LOGIN_SUCCESS = "Login Request Approved";
	public static final String USER_CHANGE_PASS_REQUEST = "Change Password Request";
	public static final String USER_RESEND_PASS_REQUEST = "Resend Password Request";
	public static final String USER_DELETE_USER_REQUEST = "Delete User Request";
	public static final String USER_DELETE_FILE_REQUEST = "Delete File Request";
	public static final String USER_DELETE_ALL_LIST_VALUE_REQUEST = "Delete All List Values Request";
	public static final String USER_CLOSE_EVENT_REQUEST = "Close Event Request";
	public static final String USER_DELETE_ENTITIES_REQUEST = "Delete All Entitites Request";
	public static final String USER_DELETE_ENTITY_REQUEST = "Delete Entity Request";
	public static final String USER_DELETE_EVENTS_REQUEST = "Delete All Events Request";
	public static final String USER_DELETE_PAGERALERTS_REQUEST = "Delete All Pager Alerts Request";
	public static final String USER_DISCHARGE_RESIDENT_REQUEST = "Discharge Resident Request";
	public static final String USER_UPDATE_RESIDENT_REQUEST = "Update Resident Request";
	public static final String USER_UPDATE_USER_REQUEST = "Update User Request";
	public static final String USER_FORM_SUBMIT_REQUEST = "Form Submit Request";
	public static final String USER_UPDATE_ALL_TAGS_REQUEST = "Update All Tags Request";
	public static final String USER_UPDATE_PANELID_REQUEST = "Update Panel ID Request";
	
	static {
		init();
	}
	
	private static void init(){
		Properties props;
		try {
			props = PropertiesHelper.loadProperties("log4j.properties");
			PropertyConfigurator.configure(props);
		} catch (IOException e) {
			e.printStackTrace();
		}
		
	}

	public static AppLogger getLogger(Class id){
		return getLogger();
	}
	
	public static AppLogger getLogger(String id){
		return getLogger();
	}

	public static AppLogger getLogger(){
		return theLogger;
	}

	
}
