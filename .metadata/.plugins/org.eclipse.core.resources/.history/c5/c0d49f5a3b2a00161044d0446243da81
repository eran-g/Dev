package com.test.util;

import java.util.Enumeration;
import java.util.HashMap;
import java.util.Iterator;
import java.util.Map;

import javax.servlet.http.HttpServletRequest;

import org.apache.log4j.Logger;

public class AppLogger extends Logger{
	
	public static final String STATUS_OK = "ok";
	public static final String STATUS_FAIL = "fail";
	//private boolean sendSMS = false;
	private static Map<String, String> messageBuff = new HashMap<String, String>();

	//private final BusinessAlertManager m_businessAlertManager;

	public AppLogger(){
		super("debug");
	}
		
	public AppLogger(String id){
		super(id);
	}
	
	public void debug(String msg){
		getLogger("debug").debug(msg);
	}

	public void alert(String msg){
		getLogger("alert").info(msg);
	}
	
	public void error(Throwable e){
		error((Exception)e);
	}
	
	public void error(String msg){
		getLogger("errors").error(msg);
	}
	
	public void error(String msg, Exception e){
		getLogger("errors").error(msg+" Exception: "+e.toString());
	}

	public void info(String msg){
		getLogger("info").info(msg);
	}

	public void web(String msg){
		getLogger("web").info(msg);
	}
	
	public static void debugUnique(String msg) {
		if (messageBuff.size()>1000){
			return;
		}
		if (messageBuff.containsKey(msg)){
			return;
		}
		messageBuff.put(msg,msg);
	}

	public static String getDebugUniqueStr() {
		
		Iterator<String> i = messageBuff.values().iterator();
		StringBuffer sb = new StringBuffer();
		sb.append("--------- dump start ------------<br>");
		
		while(i.hasNext()){
			String msg =i.next();
			sb.append(msg+"<br>");
		}
		sb.append("--------- dump end ------------");
		return sb.toString();
	}
}